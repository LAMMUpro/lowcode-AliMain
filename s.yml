edition: 1.0.0 # 命令行YAML规范版本
access: 'aliyun' # 密钥别名, 不同电脑尽量配置一样的名称，不然部署时需要手动选

## yaml内定义config, 使用${config.name}
config:
  region: "cn-shenzhen" # 地区

## 全局命令
# actions:
#   # 执行shell命令，如果直接把命令写在这里，在window下会使用CMD执行，会有兼容性问题！
#   # 使用.\路径兼容mac和windows, (mac可用./ .\, 不可省略, win可用.\, 可省略)
#   pre-deploy: # 部署前执行以下命令
#     - run: cp.sh
#       path: ./ # 路径

services:
  cn-shenzhen-lowcode-web: # 服务/模块名, 不参与部署
    component: fc # 函数组件名?，devs2app/fc | fc
    # 局部命令，不同的模块执行不同的命令
    actions:
      pre-deploy: # 部署前执行以下命令
        # 执行shell命令，如果直接把命令写在这里，在window下会使用CMD执行，会有兼容性问题！
        # 使用.\路径兼容mac和windows, (mac可用./ .\, 不可省略, win可用.\, 可省略)
        - run: .\s_deploy.sh
          path: .\scripts # 路径
    # 主要配置！！！
    props:
      region: ${config.region} # 地区名
      service: # 服务配置
        name: editor
        description: 低代码编辑器
        internetAccess: true # 设为true让function可以访问公网
        role: acs:ram::1110941952716916:role/AliyunFcDefaultRole # 授予函数计算所需权限的RAM role
        tracingConfig: Disable # 链路追踪，可取值：Enable、Disable
        ossMountConfig: # oss配置？
          mountPoints: []
      function: # 函数配置
        name: editor
        codeUri: ./build
        runtime: custom
        handler: index.handler
        timeout: 60
        diskSize: 512
        caPort: 9000
        layers:
          - acs:fc:cn-shenzhen:official:layers/Nodejs16/versions/2
        customRuntimeConfig:
          command:
            - nginx
            - '-c'
            - /code/nginx.conf
            - '-g'
            - daemon off;
        instanceType: e1
        cpu: 0.35
        instanceConcurrency: 20
        memorySize: 512
        asyncConfiguration: { # 异步配置
          destinationConfig: {}
        }
      triggers:
        - name: defaultTrigger
          description: ''
          type: http
          qualifier: LATEST
          config:
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            authType: anonymous
            disableURLInternet: false
